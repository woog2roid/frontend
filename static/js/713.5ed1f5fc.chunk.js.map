{"version":3,"file":"static/js/713.5ed1f5fc.chunk.js","mappings":"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","sources":["components/Common/Navigation/TopNav/style.tsx","styles/StyledComponents/NoneDecorationLink.tsx","components/Common/Navigation/TopNav/FriendPopover/index.tsx","components/Common/Navigation/TopNav/index.tsx","components/Common/Navigation/BottomNav/GithubFooter/style.tsx","images/GitHub-Mark.svg","components/Common/Navigation/BottomNav/GithubFooter/index.tsx","utils/confirm.ts","components/Common/Drawer/UserMenu/style.tsx","components/Common/Drawer/UserMenu/index.tsx","components/Common/Drawer/Friend/ListItemsByRelation/style.tsx","components/Common/Drawer/Friend/ListItemsByRelation/index.tsx","components/Common/Drawer/Friend/style.tsx","components/Common/Drawer/Friend/index.tsx","components/Common/Navigation/BottomNav/style.tsx","components/Common/Navigation/BottomNav/index.tsx","layouts/MainLayout/style.tsx","layouts/MainLayout/index.tsx","styles/Color.ts"],"sourcesContent":["import styled from '@emotion/styled';\nimport { styled as mstyled } from '@mui/material/styles';\nimport Color from '@styles/Color';\nimport { InputBase } from '@mui/material';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 70px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Div = styled.div`\n  & > .nav-items {\n    display: inline-block;\n    height: 50px;\n    padding: 0 5px 0 5px;\n    margin: 0 15px 0 15px;\n    border-radius: 10%;\n\n    text-decoration: none;\n    line-height: 50px;\n    color: ${Color.Blue};\n    font-size: 25px;\n    font-weight: 700;\n  }\n\n  & > .welcome-text {\n    font-size: 18px;\n    font-weight: 600;\n  }\n\n  & > .hover {\n    &: hover {\n      background-color: ${Color.Blue};\n      color: ${Color.White};\n    }\n  }\n`;\n\nexport const SearchWrapper = mstyled('form')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: Color.White,\n  marginLeft: 0,\n  width: '100%',\n}));\n\nexport const SearchIconWrapper = mstyled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledInputBase = mstyled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(0, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n  },\n}));\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport default styled(Link)`\n\ttext-decoration: none;\n`;","import * as React from 'react';\n\nimport useSWR from 'swr';\nimport axios from '@utils/axios';\nimport fetcher from '@utils/swrFetcehr';\nimport { IUser, IFriends } from '@typings/dbTypes';\n\nimport { Box, Button, Popover } from '@mui/material';\n\ntype propsType = {\n  isOpen: boolean;\n  anchorEl: HTMLElement | null;\n  onClose: () => void;\n  userData: IUser | null;\n  errorCode: String | null;\n};\n\nexport default function FriendPopover({ isOpen, anchorEl, onClose, userData, errorCode }: propsType) {\n  const { mutate } = useSWR<IFriends>(`/friend`, fetcher);\n\n  const errorMessage = errorCode == '404' ? '아이디를 확인해주세요 :(' : '서버와의 통신이 원활하지 않습니다.';\n  const ErrorMessage = () => {\n    return <Box sx={{ padding: 1 }}>{errorMessage}</Box>;\n  };\n\n  const onClickFriendAdd = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(`/friend/request/${userData?.id}`)\n        .then(() => {\n          mutate();\n          onClose();\n        })\n        .catch((error) => {\n          onClose();\n          alert(`${error.response.data.message}`);\n        });\n    },\n    [userData],\n  );\n\n  const PopOverContent = () => {\n    return (\n      <Box sx={{ padding: 1.5 }}>\n        <span>\n          {userData?.nickname}({userData?.id})님에게\n        </span>\n        <Button onClick={onClickFriendAdd} variant=\"text\" sx={{ fontSize: '16px' }}>\n          <span>친구 요청 보내기</span>\n        </Button>\n      </Box>\n    );\n  };\n\n  return (\n    <Popover\n      open={isOpen}\n      anchorEl={anchorEl}\n      onClose={onClose}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n    >\n      {errorCode ? ErrorMessage() : PopOverContent()}\n    </Popover>\n  );\n}\n","import * as React from 'react';\n\nimport useSWR from 'swr';\nimport axios from '@utils/axios';\nimport fetcher from '@utils/swrFetcehr';\nimport { IUser, IChatRoom } from '@typings/dbTypes';\n\nimport {\n  Wrapper,\n  Div,\n  SearchWrapper,\n  SearchIconWrapper,\n  StyledInputBase as InputBase,\n} from './style';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport Link from '@styles/StyledComponents/NoneDecorationLink';\nimport FriendPopover from './FriendPopover';\n\nexport default function TopNav() {\n  const { data: userData, error } = useSWR<IUser>(`/user/me`, fetcher);\n\n  const [userDataForFriendPopover, setUserDataForFriendPopover] =\n    React.useState<IUser | null>(null);\n  const [errorDataForFriendPopover, setErrorDataForFriendPopover] =\n    React.useState<String | null>(null);\n\n  const [anchorElForFriendPopover, setAnchorElForFriendPopover] =\n    React.useState<HTMLElement | null>(null);\n  const [isFriendPopoverOpen, setIsFriendPopoverOpen] =\n    React.useState<boolean>(false);\n  const closeFriendPopover = () => {\n    setIsFriendPopoverOpen(false);\n  };\n\n  const onSubmitFindById = React.useCallback((e) => {\n    e.preventDefault();\n    setAnchorElForFriendPopover(e.currentTarget);\n    axios\n      .get(`/user?id=${e.target.input.value}`)\n      .then((res) => {\n        setUserDataForFriendPopover(res.data);\n        setErrorDataForFriendPopover(null);\n      })\n      .catch((err) => {\n        setUserDataForFriendPopover(null);\n        setErrorDataForFriendPopover(err.response.data.statusCode);\n      });\n  }, []);\n\n  /*\n    팝오버가 꺼진 후에는, null로 초기화\n    popover가 꺼지는 것에 시간이 걸려서\n    UX를 위해 setTimeout 이용하여서\n    초기화가 진행되지 않은 상태를 보지 않도록\n  */\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (!isFriendPopoverOpen) {\n        setErrorDataForFriendPopover(null);\n        setUserDataForFriendPopover(null);\n        setAnchorElForFriendPopover(null);\n      }\n    }, 500);\n  }, [isFriendPopoverOpen]);\n\n  //data들이 불러져 온 후에, 팝오버가 켜져야 함.\n  React.useEffect(() => {\n    if (userDataForFriendPopover) {\n      setIsFriendPopoverOpen(true);\n    }\n  }, [userDataForFriendPopover]);\n  React.useEffect(() => {\n    if (errorDataForFriendPopover) {\n      setIsFriendPopoverOpen(true);\n    }\n  }, [errorDataForFriendPopover]);\n\n  return (\n    <>\n      <Wrapper>\n        <Div>\n          <Link\n            to=\"/\"\n            className=\"nav-items hover\"\n            onClick={() => alert('아직 개발중인 기능입니다 :(')}\n          >\n            게임\n          </Link>\n          <Link to=\"/chat\" className=\"nav-items hover\">\n            채팅\n          </Link>\n        </Div>\n        <Div>\n          {userData && !error ? (\n            <span className=\"welcome-text\">\n              {userData.nickname}({userData.id})님 환영합니다.\n            </span>\n          ) : (\n            <span></span>\n          )}\n          <div className=\"nav-items\">\n            <SearchWrapper onSubmit={onSubmitFindById}>\n              <SearchIconWrapper>\n                <SearchIcon />\n              </SearchIconWrapper>\n              <InputBase name=\"input\" placeholder=\"ID로 친구 찾기\" />\n            </SearchWrapper>\n          </div>\n        </Div>\n      </Wrapper>\n\n      <FriendPopover\n        isOpen={isFriendPopoverOpen}\n        anchorEl={anchorElForFriendPopover}\n        onClose={closeFriendPopover}\n        userData={userDataForFriendPopover}\n        errorCode={errorDataForFriendPopover}\n      />\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 30px;\n  text-align: center;\n\n  font-size: 15px;\n  font-weight: 600;\n`;\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGitHubMark(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"32.000000pt\",\n    height: \"32.000000pt\",\n    viewBox: \"0 0 32.000000 32.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,32.000000) scale(0.100000,-0.100000)\",\n    fill: \"#000000\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95 306 c-113 -52 -127 -204 -25 -274 39 -26 50 -28 50 -7 0 8 -7 15 -15 15 -8 0 -25 12 -39 27 -28 30 -26 45 2 20 20 -19 48 -22 57 -8 3 5 -3 12 -14 16 -40 12 -54 41 -47 97 l7 53 89 0 89 0 7 -53 c7 -55 -7 -85 -45 -97 -13 -4 -16 -14 -13 -45 2 -22 7 -40 12 -40 4 0 22 10 40 22 93 64 91 191 -2 261 -34 25 -113 32 -153 13z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGitHubMark);\nexport default __webpack_public_path__ + \"static/media/GitHub-Mark.e23e760d636dd4e4ceb5510d5bd5697a.svg\";\nexport { ForwardRef as ReactComponent };","import { Wrapper } from './style';\nimport GithubMark from '@images/GitHub-Mark.svg';\n\nexport default function Footer() {\n  return (\n    <Wrapper>\n      Made By Woog2roid\n      <a href=\"https://github.com/woog2roid/\" target=\"_blank\" rel=\"noreferrer\">\n        <img src={GithubMark} alt=\"\" width=\"15px\" height=\"15px\" />\n      </a>\n    </Wrapper>\n  );\n}\n","import { confirm } from 'react-confirm-box';\n\nconst customConfirm = (message: string) => {\n  return confirm(message, {\n    labels: {\n      confirmable: '예',\n      cancellable: '아니오',\n    },\n  });\n};\n\nexport default customConfirm;\n","import styled from '@emotion/styled';\nimport Color from '@styles/Color';\n\nexport const BottomListWrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  color: ${Color.Red};\n`;\n","import * as React from 'react';\n\nimport axios from '@utils/axios';\n\nimport { useNavigate } from 'react-router-dom';\n\nimport confirm from '@utils/confirm';\nimport { Box, Drawer, List, Divider, ListItem } from '@mui/material';\nimport { BottomListWrapper } from './style';\n\ntype propsType = {\n  isOpen: boolean;\n  closeDrawer: () => void;\n  openDrawer: () => void;\n};\n\nexport default function UserMenuDrawer({ isOpen, closeDrawer, openDrawer }: propsType) {\n  const navigate = useNavigate();\n\n  const onClickLogout = async () => {\n    closeDrawer();\n    const isConfirmed = await confirm('로그아웃 하시겠습니까?');\n    if (isConfirmed) {\n      axios\n        .post(`${process.env.REACT_APP_SERVER}/user/logout`)\n        .then(() => {\n          navigate(0);\n        })\n        .catch(() => {\n          alert('서버와의 통신이 원활하지 않아요... :(');\n        });\n    } else {\n      openDrawer();\n    }\n  };\n\n  const onClickQuit = async () => {\n    closeDrawer();\n    const isConfirmed = await confirm('정말 탈퇴하시겠습니까?');\n    if (isConfirmed) {\n      axios\n        .delete(`${process.env.REACT_APP_SERVER}/user/quit`, {\n          withCredentials: true,\n        })\n        .then(() => {\n          navigate(0);\n        })\n        .catch(() => {\n          alert('서버와의 통신이 원활하지 않아요... :(');\n        });\n    } else {\n      openDrawer();\n    }\n  };\n\n  return (\n    <Drawer anchor={'right'} open={isOpen} onClose={closeDrawer}>\n      <Box sx={{ width: '250px' }}>\n        <BottomListWrapper>\n          <Divider />\n          <List>\n            <ListItem button onClick={onClickLogout}>\n              로그아웃\n            </ListItem>\n            <ListItem button onClick={onClickQuit}>\n              회원탈퇴\n            </ListItem>\n          </List>\n        </BottomListWrapper>\n      </Box>\n    </Drawer>\n  );\n}\n","import styled from '@emotion/styled';\nimport { ListItem } from '@mui/material';\n\nexport const ListItemWrapper = styled.span`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 14px;\n`;\n\nexport const PopoverItem = styled(ListItem)`\n  font-size: 13px;\n`;\n","import * as React from 'react';\n\nimport useSWR from 'swr';\nimport { IFriends, IUser } from '@typings/dbTypes';\nimport fetcher from '@utils/swrFetcehr';\nimport axios from '@utils/axios';\n\nimport { List, Popover } from '@mui/material';\nimport { Check, ClearOutlined, PersonRemove } from '@mui/icons-material';\nimport { ListItemWrapper, PopoverItem } from './style';\n\ntype PropsType = {\n  id: string;\n  nickname: string;\n};\n\nexport const RequestedFriendListItem = ({ id: followerId, nickname: followerNickname }: PropsType) => {\n  const { mutate } = useSWR<IFriends>(`/friend`, fetcher);\n  const { data: userData } = useSWR<IUser>('/user/me', fetcher);\n\n  const onClickAcceptRequest = () => {\n    axios.post(`/friend/accept/${followerId}`).then(() => {\n      mutate();\n      axios.post(`/chat-room?dm=true`, {\n        members: [followerId, userData?.id],\n        title: '',\n      });\n    });\n  };\n\n  const onClickRejectRequest = () => {\n    axios.delete(`/friend/request?relation=follower&id=${followerId}`).then(() => {\n      mutate();\n    });\n  };\n\n  return (\n    <ListItemWrapper>\n      <span>\n        {followerNickname}({followerId})님\n      </span>\n      <span>\n        <Check onClick={onClickAcceptRequest} fontSize=\"small\" />\n        <ClearOutlined onClick={onClickRejectRequest} fontSize=\"small\" />\n      </span>\n    </ListItemWrapper>\n  );\n};\n\nexport const NotAcceptedFriendListItem = ({ id: followingId, nickname: followingNickname }: PropsType) => {\n  const { mutate } = useSWR<IFriends>(`/friend`, fetcher);\n\n  const onClickCancelRequest = () => {\n    axios.delete(`/friend/request?relation=following&id=${followingId}`).then(() => {\n      mutate();\n    });\n  };\n\n  return (\n    <ListItemWrapper>\n      <span>\n        {followingNickname}({followingId})님\n      </span>\n      <span>\n        <ClearOutlined onClick={onClickCancelRequest} fontSize=\"small\" />\n      </span>\n    </ListItemWrapper>\n  );\n};\n\nexport const FriendListItem = ({ id: followingId, nickname: followingNickname }: PropsType) => {\n  const { mutate } = useSWR<IFriends>(`/friend`, fetcher);\n\n  const onClickRemoveFriend = () => {\n    axios.delete(`/friend?id=${followingId}`).then(() => {\n      mutate();\n    });\n  };\n\n  return (\n    <>\n      <ListItemWrapper>\n        <span>\n          {followingNickname}({followingId})님\n        </span>\n        <span>\n          <PersonRemove onClick={onClickRemoveFriend} fontSize=\"small\" />\n        </span>\n      </ListItemWrapper>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport Color from '@styles/Color';\n\nexport const Details = styled.details`\n  border: 8px solid white;\n`;\n\nexport const Summary = styled.summary`\n  background-color: ${Color.TransparentBlue};\n  padding: 12px;\n  font-size: 16px;\n  &::marker {\n    font-size: 0;\n  }\n`;\n\nexport const BottomListWrapper = styled.div``;\n","import * as React from 'react';\n\nimport useSWR from 'swr';\nimport fetcher from '@utils/swrFetcehr';\nimport { IFriends, IUserRelation } from '@typings/dbTypes';\n\nimport { Box, List, Drawer, ListItem } from '@mui/material';\nimport {\n  RequestedFriendListItem,\n  NotAcceptedFriendListItem,\n  FriendListItem,\n} from './ListItemsByRelation';\nimport { Summary, Details, BottomListWrapper } from './style';\n\ntype propsType = {\n  isOpen: boolean;\n  closeDrawer: () => void;\n};\n\nexport default function FriendDrawer({ isOpen, closeDrawer }: propsType) {\n  const { data } = useSWR<IFriends>(`/friend`, fetcher);\n\n  return (\n    <Drawer anchor={'right'} open={isOpen} onClose={closeDrawer}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          width: '300px',\n          height: '100%',\n          overflow: 'auto',\n        }}\n      >\n        <Details>\n          <Summary>{`친구 목록  (${data?.friends?.length})`}</Summary>\n          <List>\n            {data?.friends?.map((data: IUserRelation) => {\n              return (\n                <ListItem button key={+data.id}>\n                  <FriendListItem\n                    id={data.following.id}\n                    nickname={data.following.nickname}\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Details>\n        <BottomListWrapper>\n          <Details>\n            <Summary>{`아직 확인하지 않은 친구 요청  (${data?.followers?.length})`}</Summary>\n            <List>\n              {data?.followers?.map((data: IUserRelation) => {\n                return (\n                  <ListItem button key={+data.id}>\n                    <RequestedFriendListItem\n                      id={data.follower.id}\n                      nickname={data.follower.nickname}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Details>\n          <Details>\n            <Summary>{`아직 수락되지 않은 친구 요청  (${data?.followings?.length})`}</Summary>\n            <List>\n              {data?.followings?.map((data: IUserRelation) => {\n                return (\n                  <ListItem button key={+data.id}>\n                    <NotAcceptedFriendListItem\n                      id={data.following.id}\n                      nickname={data.following.nickname}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Details>\n        </BottomListWrapper>\n      </Box>\n    </Drawer>\n  );\n}\n","import styled from '@emotion/styled';\nimport Color from '@styles/Color';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 50px;\n  justify-content: space-between;\n  align-items: center;\n`;\n\ntype sideProps = {\n  side?: string;\n};\nexport const Div = styled.div<sideProps>`\n  display: flex;\n  width: 180px;\n  justify-content: ${(props) => (props?.side === 'right' ? 'flex-end' : 'flex-start')};\n  & > .nav-items {\n    display: inline-block;\n    padding: 0px 5px 0px 5px;\n    margin-top: -7px;\n    border-radius: 10%;\n    color: ${Color.Blue};\n  }\n\n  .nav-items + .nav-items {\n    margin-left: 15px;\n  }\n\n  & > .hover {\n    &: hover {\n      background-color: ${Color.Blue};\n      color: ${Color.White};\n    }\n  }\n`;\n","import * as React from 'react';\n\nimport useSWR from 'swr';\nimport fetcher from '@utils/swrFetcehr';\nimport { IFriends } from '@typings/dbTypes';\n\nimport Footer from './GithubFooter';\nimport UserMenuDrawer from '@components/Common/Drawer/UserMenu';\nimport FriendDrawer from '@components/Common/Drawer/Friend';\n\nimport { Badge } from '@mui/material';\nimport { Home, People, Menu } from '@mui/icons-material';\nimport { Wrapper, Div } from './style';\n\nimport { useNavigate } from 'react-router-dom';\n\nexport default function BottomNav() {\n  const navigate = useNavigate();\n\n  const { data: friendData } = useSWR<IFriends>(`/friend`, fetcher);\n\n  const [isUserMenuDrawerOpen, setIsUserMenuDrawerOpen] = React.useState(false);\n  const closeUserMenuDrawer = () => {\n    setIsUserMenuDrawerOpen(false);\n  };\n  const openUserMenuDrawer = () => {\n    setIsUserMenuDrawerOpen(true);\n  };\n\n  const [isFriendDrawerOpen, setIsFriendDrawerOpen] = React.useState(false);\n  const closeFriendDrawer = () => {\n    setIsFriendDrawerOpen(false);\n  };\n  const opneFriendDrawer = () => {\n    setIsFriendDrawerOpen(true);\n  };\n\n  return (\n    <>\n      <Wrapper>\n        <Div>\n          <Home\n            fontSize=\"large\"\n            className=\"nav-items hover\"\n            onClick={() => {\n              navigate('/notice');\n            }}\n          />\n        </Div>\n        <Div>\n          <Footer />\n        </Div>\n        <Div side=\"right\">\n          {friendData?.followers !== undefined && friendData?.followings !== undefined ? (\n            <Badge\n              badgeContent={`${friendData.followers.length}/${friendData.followings.length}`}\n              className=\"nav-items hover\"\n              color=\"error\"\n            >\n              <People fontSize=\"large\" onClick={opneFriendDrawer} />\n            </Badge>\n          ) : (\n            <People fontSize=\"large\" className=\"nav-items hover\" onClick={opneFriendDrawer} />\n          )}\n          <Menu fontSize=\"large\" className=\"nav-items hover\" onClick={openUserMenuDrawer} />\n        </Div>\n      </Wrapper>\n\n      <UserMenuDrawer isOpen={isUserMenuDrawerOpen} closeDrawer={closeUserMenuDrawer} openDrawer={openUserMenuDrawer} />\n      <FriendDrawer isOpen={isFriendDrawerOpen} closeDrawer={closeFriendDrawer} />\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport Color from '@styles/Color';\n\n/*좌우로 1%씩, 위 아래로 5px씩 여유두고 레이아웃 짠다.*/\nconst Wrapper = styled.div`\n  padding: 0;\n  margin-left: 1%;\n  margin-right: 1%;\n  width: 98%;\n  height: 100%;\n\n  & > .top-nav {\n    position: fixed;\n    top: 5px;\n    height: 70px;\n    width: inherit;\n  }\n\n  & > .bottom-nav {\n    position: fixed;\n    bottom: 5px;\n    height: 50px;\n    width: inherit;\n  }\n\n  & > .content-wrapper {\n    position: fixed;\n    top: 10%;\n    height: calc(80% - 60px);\n    left: 8%;\n    width: calc(84% - 60px);\n\n    border-radius: 5%;\n    padding: 30px;\n\n    background: ${Color.TransparentBlue};\n  }\n\n  .content-wrapper > .content {\n    background-color: ${Color.TransparentWhite};\n    outline: 1px solid ${Color.Gray};\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default Wrapper;\n","import * as React from 'react';\n\nimport TopNav from '@components/Common/Navigation/TopNav';\nimport BottomNav from '@components/Common/Navigation/BottomNav';\n\nimport Wrapper from './style';\n\ntype propsType = {\n  children?: React.ReactNode;\n};\n\nexport default function MainLayout({ children }: propsType) {\n  return (\n    <>\n      <Wrapper>\n        <div className=\"top-nav\">\n          <TopNav />\n        </div>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">{children}</div>\n        </div>\n        <div className=\"bottom-nav\">\n          <BottomNav />\n        </div>\n      </Wrapper>\n    </>\n  );\n}\n","const Color = {\n  Blue: 'rgba(70, 96, 240, 0.95)',\n  White: 'rgba(255, 255, 255, 0.95)',\n  Red: 'rgb(200, 0, 0)',\n  Gray: '#bdbdbd',\n  TransparentBlue: 'rgba(200, 200, 230, 0.65)',\n  TransparentWhite: 'rgba(255, 255, 255, 0.4)',\n  TransparentBlack: 'rgba(100, 100, 100, 0.2)',\n  TransparentGray: 'rgba(200, 200, 200, 0.4)',\n};\n\nexport default Color;\n"],"names":["Wrapper","styled","Div","Color","SearchWrapper","mstyled","position","borderRadius","theme","shape","backgroundColor","marginLeft","width","SearchIconWrapper","padding","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","Link","FriendPopover","isOpen","anchorEl","onClose","userData","errorCode","mutate","useSWR","fetcher","errorMessage","onClickFriendAdd","React","e","preventDefault","axios","id","then","catch","error","alert","response","data","message","Popover","open","anchorOrigin","vertical","horizontal","transformOrigin","Box","sx","nickname","Button","onClick","variant","fontSize","TopNav","userDataForFriendPopover","setUserDataForFriendPopover","errorDataForFriendPopover","setErrorDataForFriendPopover","anchorElForFriendPopover","setAnchorElForFriendPopover","isFriendPopoverOpen","setIsFriendPopoverOpen","onSubmitFindById","currentTarget","target","input","value","res","err","statusCode","setTimeout","to","className","onSubmit","Search","name","placeholder","Footer","href","rel","src","GithubMark","alt","confirm","labels","confirmable","cancellable","BottomListWrapper","UserMenuDrawer","closeDrawer","openDrawer","navigate","useNavigate","onClickLogout","process","onClickQuit","withCredentials","Drawer","anchor","Divider","List","ListItem","button","ListItemWrapper","RequestedFriendListItem","followerId","followerNickname","Check","members","title","ClearOutlined","NotAcceptedFriendListItem","followingId","followingNickname","FriendListItem","PersonRemove","Details","Summary","FriendDrawer","flexDirection","overflow","friends","length","map","following","followers","follower","followings","props","side","BottomNav","friendData","isUserMenuDrawerOpen","setIsUserMenuDrawerOpen","openUserMenuDrawer","isFriendDrawerOpen","setIsFriendDrawerOpen","opneFriendDrawer","Home","undefined","Badge","badgeContent","People","Menu","MainLayout","children","Blue","White","Red","Gray","TransparentBlue","TransparentWhite","TransparentBlack","TransparentGray"],"sourceRoot":""}